/**
 * generated by Xtext 2.24.0
 */
package mdd.coursework.xcss.xcss.impl;

import mdd.coursework.xcss.xcss.CSSStyleValueLiteral;
import mdd.coursework.xcss.xcss.NumberLiteral;
import mdd.coursework.xcss.xcss.SizeLiteral;
import mdd.coursework.xcss.xcss.XcssPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CSS Style Value Literal</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mdd.coursework.xcss.xcss.impl.CSSStyleValueLiteralImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link mdd.coursework.xcss.xcss.impl.CSSStyleValueLiteralImpl#getSize <em>Size</em>}</li>
 *   <li>{@link mdd.coursework.xcss.xcss.impl.CSSStyleValueLiteralImpl#getWord <em>Word</em>}</li>
 *   <li>{@link mdd.coursework.xcss.xcss.impl.CSSStyleValueLiteralImpl#getHex <em>Hex</em>}</li>
 *   <li>{@link mdd.coursework.xcss.xcss.impl.CSSStyleValueLiteralImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link mdd.coursework.xcss.xcss.impl.CSSStyleValueLiteralImpl#getString <em>String</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CSSStyleValueLiteralImpl extends MinimalEObjectImpl.Container implements CSSStyleValueLiteral
{
  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected NumberLiteral number;

  /**
   * The cached value of the '{@link #getSize() <em>Size</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSize()
   * @generated
   * @ordered
   */
  protected SizeLiteral size;

  /**
   * The default value of the '{@link #getWord() <em>Word</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWord()
   * @generated
   * @ordered
   */
  protected static final String WORD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWord() <em>Word</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWord()
   * @generated
   * @ordered
   */
  protected String word = WORD_EDEFAULT;

  /**
   * The default value of the '{@link #getHex() <em>Hex</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHex()
   * @generated
   * @ordered
   */
  protected static final String HEX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHex() <em>Hex</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHex()
   * @generated
   * @ordered
   */
  protected String hex = HEX_EDEFAULT;

  /**
   * The default value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected static final String FUNCTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected String function = FUNCTION_EDEFAULT;

  /**
   * The default value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected static final String STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected String string = STRING_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CSSStyleValueLiteralImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XcssPackage.Literals.CSS_STYLE_VALUE_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NumberLiteral getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumber(NumberLiteral newNumber, NotificationChain msgs)
  {
    NumberLiteral oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER, oldNumber, newNumber);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumber(NumberLiteral newNumber)
  {
    if (newNumber != number)
    {
      NotificationChain msgs = null;
      if (number != null)
        msgs = ((InternalEObject)number).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER, null, msgs);
      if (newNumber != null)
        msgs = ((InternalEObject)newNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER, null, msgs);
      msgs = basicSetNumber(newNumber, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER, newNumber, newNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SizeLiteral getSize()
  {
    return size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSize(SizeLiteral newSize, NotificationChain msgs)
  {
    SizeLiteral oldSize = size;
    size = newSize;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE, oldSize, newSize);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSize(SizeLiteral newSize)
  {
    if (newSize != size)
    {
      NotificationChain msgs = null;
      if (size != null)
        msgs = ((InternalEObject)size).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE, null, msgs);
      if (newSize != null)
        msgs = ((InternalEObject)newSize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE, null, msgs);
      msgs = basicSetSize(newSize, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE, newSize, newSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWord()
  {
    return word;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWord(String newWord)
  {
    String oldWord = word;
    word = newWord;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__WORD, oldWord, word));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHex()
  {
    return hex;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHex(String newHex)
  {
    String oldHex = hex;
    hex = newHex;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__HEX, oldHex, hex));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFunction(String newFunction)
  {
    String oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__FUNCTION, oldFunction, function));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getString()
  {
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setString(String newString)
  {
    String oldString = string;
    string = newString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XcssPackage.CSS_STYLE_VALUE_LITERAL__STRING, oldString, string));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER:
        return basicSetNumber(null, msgs);
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE:
        return basicSetSize(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER:
        return getNumber();
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE:
        return getSize();
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__WORD:
        return getWord();
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__HEX:
        return getHex();
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__FUNCTION:
        return getFunction();
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__STRING:
        return getString();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER:
        setNumber((NumberLiteral)newValue);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE:
        setSize((SizeLiteral)newValue);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__WORD:
        setWord((String)newValue);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__HEX:
        setHex((String)newValue);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__FUNCTION:
        setFunction((String)newValue);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__STRING:
        setString((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER:
        setNumber((NumberLiteral)null);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE:
        setSize((SizeLiteral)null);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__WORD:
        setWord(WORD_EDEFAULT);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__HEX:
        setHex(HEX_EDEFAULT);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__FUNCTION:
        setFunction(FUNCTION_EDEFAULT);
        return;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__STRING:
        setString(STRING_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__NUMBER:
        return number != null;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__SIZE:
        return size != null;
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__WORD:
        return WORD_EDEFAULT == null ? word != null : !WORD_EDEFAULT.equals(word);
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__HEX:
        return HEX_EDEFAULT == null ? hex != null : !HEX_EDEFAULT.equals(hex);
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__FUNCTION:
        return FUNCTION_EDEFAULT == null ? function != null : !FUNCTION_EDEFAULT.equals(function);
      case XcssPackage.CSS_STYLE_VALUE_LITERAL__STRING:
        return STRING_EDEFAULT == null ? string != null : !STRING_EDEFAULT.equals(string);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (word: ");
    result.append(word);
    result.append(", hex: ");
    result.append(hex);
    result.append(", function: ");
    result.append(function);
    result.append(", string: ");
    result.append(string);
    result.append(')');
    return result.toString();
  }

} //CSSStyleValueLiteralImpl
