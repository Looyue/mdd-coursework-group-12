/**
 * generated by Xtext 2.24.0
 */
package mdd.coursework.xcss.xcss.impl;

import mdd.coursework.xcss.xcss.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class XcssFactoryImpl extends EFactoryImpl implements XcssFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static XcssFactory init()
  {
    try
    {
      XcssFactory theXcssFactory = (XcssFactory)EPackage.Registry.INSTANCE.getEFactory(XcssPackage.eNS_URI);
      if (theXcssFactory != null)
      {
        return theXcssFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new XcssFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XcssFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case XcssPackage.XCSS_MODEL: return createXcssModel();
      case XcssPackage.ABSTRACT_ELEMENT: return createAbstractElement();
      case XcssPackage.XCSS_STYLE_RULE: return createXCSSStyleRule();
      case XcssPackage.VARIABLE_DECLARATION: return createVariableDeclaration();
      case XcssPackage.EXPRESSION: return createExpression();
      case XcssPackage.XCSS_SELECTOR: return createXCSSSelector();
      case XcssPackage.SELECTOR_NAME: return createSelectorName();
      case XcssPackage.PSEUDO_CLASS: return createPseudoClass();
      case XcssPackage.CSS_STYLE_DELACRATION: return createCSSStyleDelacration();
      case XcssPackage.CSS_STYLE_KEY: return createCSSStyleKey();
      case XcssPackage.CSS_STYLE_VALUE: return createCSSStyleValue();
      case XcssPackage.CSS_STYLE_VALUE_LITERAL: return createCSSStyleValueLiteral();
      case XcssPackage.SIZE_LITERAL: return createSizeLiteral();
      case XcssPackage.NUMBER_LITERAL: return createNumberLiteral();
      case XcssPackage.ADDITION: return createAddition();
      case XcssPackage.MULTIPLICATION: return createMultiplication();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XcssModel createXcssModel()
  {
    XcssModelImpl xcssModel = new XcssModelImpl();
    return xcssModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractElement createAbstractElement()
  {
    AbstractElementImpl abstractElement = new AbstractElementImpl();
    return abstractElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XCSSStyleRule createXCSSStyleRule()
  {
    XCSSStyleRuleImpl xcssStyleRule = new XCSSStyleRuleImpl();
    return xcssStyleRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableDeclaration createVariableDeclaration()
  {
    VariableDeclarationImpl variableDeclaration = new VariableDeclarationImpl();
    return variableDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XCSSSelector createXCSSSelector()
  {
    XCSSSelectorImpl xcssSelector = new XCSSSelectorImpl();
    return xcssSelector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SelectorName createSelectorName()
  {
    SelectorNameImpl selectorName = new SelectorNameImpl();
    return selectorName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PseudoClass createPseudoClass()
  {
    PseudoClassImpl pseudoClass = new PseudoClassImpl();
    return pseudoClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CSSStyleDelacration createCSSStyleDelacration()
  {
    CSSStyleDelacrationImpl cssStyleDelacration = new CSSStyleDelacrationImpl();
    return cssStyleDelacration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CSSStyleKey createCSSStyleKey()
  {
    CSSStyleKeyImpl cssStyleKey = new CSSStyleKeyImpl();
    return cssStyleKey;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CSSStyleValue createCSSStyleValue()
  {
    CSSStyleValueImpl cssStyleValue = new CSSStyleValueImpl();
    return cssStyleValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CSSStyleValueLiteral createCSSStyleValueLiteral()
  {
    CSSStyleValueLiteralImpl cssStyleValueLiteral = new CSSStyleValueLiteralImpl();
    return cssStyleValueLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SizeLiteral createSizeLiteral()
  {
    SizeLiteralImpl sizeLiteral = new SizeLiteralImpl();
    return sizeLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NumberLiteral createNumberLiteral()
  {
    NumberLiteralImpl numberLiteral = new NumberLiteralImpl();
    return numberLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Addition createAddition()
  {
    AdditionImpl addition = new AdditionImpl();
    return addition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Multiplication createMultiplication()
  {
    MultiplicationImpl multiplication = new MultiplicationImpl();
    return multiplication;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XcssPackage getXcssPackage()
  {
    return (XcssPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static XcssPackage getPackage()
  {
    return XcssPackage.eINSTANCE;
  }

} //XcssFactoryImpl
